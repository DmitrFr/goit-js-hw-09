{"mappings":"YAkBA,IAAMA,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAClCG,EAASJ,SAASC,cAAc,QAChCI,EAAWL,SAASC,cAAc,UACpCK,EAAiB,EACjBC,EAAU,KAgBd,SAASC,IACP,IAzCqBC,EAAUC,EACzBC,EAwCAC,GAzCeH,EAyCSH,EAzCCI,EAyCeX,EAAQc,MAxChDF,EAAgBG,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EACFC,OAAOrB,EAAQc,OAASO,OAAOlB,EAAOW,QAAUP,EAAiB,GACnEe,YAAW,WACLV,EAEFM,EAAQ,uBAAwCK,OAAfb,EAAS,QAAaa,OAAPH,EAAO,OAGvDD,EAAO,sBAAqCI,OAAfb,EAAS,QAAaa,OAAPH,EAAO,M,GAEpDT,E,MA6BLJ,GAAkB,GAEGc,OAAOjB,EAASU,SACnCU,cAAchB,GACdD,EAAiB,EACjBD,EAASmB,UAAW,GAGtBZ,EACGa,MAAK,SAAAC,GACJC,QAAQC,IAAIF,E,IAEbG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,E,IA9BlB1B,EAAO2B,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBACJ5B,EAASmB,UAAW,EAEpBH,YAAW,WACTb,IACAD,EAAU2B,aAAY,WACpB1B,G,GACCN,EAAOW,M,GACTd,EAAQc,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    let delays =\n      Number(delayEl.value) + Number(stepEl.value) * (promiseCounter - 1);\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delays}ms`);\n      } else {\n        // Reject\\\n        reject(`❌ Rejected promise ${position} in ${delays}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]'); //delay\nconst amountEl = document.querySelector('input[name=\"amount\"]'); //position\nconst formEl = document.querySelector('form');\nconst buttonEl = document.querySelector('button');\nlet promiseCounter = 1;\nlet timerId = null;\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  buttonEl.disabled = true;\n\n  setTimeout(() => {\n    showPromises();\n    timerId = setInterval(() => {\n      showPromises();\n    }, stepEl.value);\n  }, delayEl.value);\n}\n\nfunction showPromises() {\n  const promise = createPromise(promiseCounter, delayEl.value);\n\n  promiseCounter += 1;\n\n  if (promiseCounter > Number(amountEl.value)) {\n    clearInterval(timerId);\n    promiseCounter = 1;\n    buttonEl.disabled = false;\n  }\n\n  promise\n    .then(result => {\n      console.log(result);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$ce04d3a99e08e73b$var$delayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$formEl","$ce04d3a99e08e73b$var$buttonEl","$ce04d3a99e08e73b$var$promiseCounter","$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$showPromises","position","delay","shouldResolve","promise","value","Math","random","Promise","resolve","reject","delays","Number","setTimeout","concat","clearInterval","disabled","then","result","console","log","catch","error","addEventListener","evt","preventDefault","setInterval"],"version":3,"file":"03-promises.0080ef45.js.map"}