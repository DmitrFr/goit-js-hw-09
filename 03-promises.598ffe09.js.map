{"mappings":"AAkBA,MAAMA,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAClCG,EAASJ,SAASC,cAAc,QAChCI,EAAWL,SAASC,cAAc,UACxC,IAAIK,EAAiB,EACjBC,EAAU,KAgBd,SAASC,IACP,MAAMC,EAzCR,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,IAAIC,EACFC,OAAOpB,EAAQqB,OAASD,OAAOjB,EAAOkB,QAAUd,EAAiB,GACnEe,YAAW,KACLT,EAEFI,EAAQ,uBAAqBN,QAAiBQ,OAG9CD,EAAO,sBAAoBP,QAAeQ,MAAW,GAEtDP,EAAM,G,CA2BKW,CAAchB,EAAgBP,EAAQqB,OAEtDd,GAAkB,EAEdA,EAAiBa,OAAOhB,EAASiB,SACnCG,cAAchB,GACdD,EAAiB,EACjBD,EAASmB,UAAW,GAGtBf,EACGgB,MAAKC,IACJC,QAAQC,IAAIF,EAAO,IAEpBG,OAAMC,IACLH,QAAQC,IAAIE,EAAM,G,CA9BxB1B,EAAO2B,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBACJ5B,EAASmB,UAAW,EAEpBH,YAAW,KACTb,IACAD,EAAU2B,aAAY,KACpB1B,GAAc,GACbN,EAAOkB,MAAM,GACfrB,EAAQqB,M","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    let delays =\n      Number(delayEl.value) + Number(stepEl.value) * (promiseCounter - 1);\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delays}ms`);\n      } else {\n        // Reject\\\n        reject(`❌ Rejected promise ${position} in ${delays}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]'); //delay\nconst amountEl = document.querySelector('input[name=\"amount\"]'); //position\nconst formEl = document.querySelector('form');\nconst buttonEl = document.querySelector('button');\nlet promiseCounter = 1;\nlet timerId = null;\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  buttonEl.disabled = true;\n\n  setTimeout(() => {\n    showPromises();\n    timerId = setInterval(() => {\n      showPromises();\n    }, stepEl.value);\n  }, delayEl.value);\n}\n\nfunction showPromises() {\n  const promise = createPromise(promiseCounter, delayEl.value);\n\n  promiseCounter += 1;\n\n  if (promiseCounter > Number(amountEl.value)) {\n    clearInterval(timerId);\n    promiseCounter = 1;\n    buttonEl.disabled = false;\n  }\n\n  promise\n    .then(result => {\n      console.log(result);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$buttonEl","$47d4ff9957288465$var$promiseCounter","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$showPromises","promise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","delays","Number","value","setTimeout","$47d4ff9957288465$var$createPromise","clearInterval","disabled","then","result","console","log","catch","error","addEventListener","evt","preventDefault","setInterval"],"version":3,"file":"03-promises.598ffe09.js.map"}